// Part B: Filtering and Sorting Students Using Streams

import java.util.*;
import java.util.stream.Collectors;

public class Part2 {

    static class Student {
        private String name;
        private double marks;

        public Student(String name, double marks) {
            this.name = name;
            this.marks = marks;
        }

        public String getName() { return name; }
        public double getMarks() { return marks; }

        @Override
        public String toString() {
            return name + " | Marks: " + marks;
        }
    }

    public static void main(String[] args) {
        List<Student> students = Arrays.asList(
            new Student("Alice", 85.5),
            new Student("Bob", 65.0),
            new Student("Charlie", 90.0),
            new Student("David", 72.3),
            new Student("Eve", 78.0)
        );

        List<String> topStudents = students.stream()
            .filter(s -> s.getMarks() > 75)
            .sorted(Comparator.comparingDouble(Student::getMarks).reversed())
            .map(Student::getName)
            .collect(Collectors.toList());

        System.out.println("Part 2: Students with Marks > 75% (Sorted by Marks):");
        topStudents.forEach(System.out::println);
    }
}
